// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE
'use strict';

var Css = require("bs-css/src/Css.js");
var List = require("bs-platform/lib/js/list.js");
var $$Array = require("bs-platform/lib/js/array.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Utils$ReactHooksTemplate = require("../Utils.bs.js");
var TodoItem$ReactHooksTemplate = require("./TodoItem.bs.js");

var taskCount = Css.style(/* :: */[
      Css.fontSize(Css.pt(12)),
      /* :: */[
        Css.color(Css.hex("aaa")),
        /* :: */[
          Css.fontWeight(Css.bold),
          /* [] */0
        ]
      ]
    ]);

var input = Css.style(/* :: */[
      Css.padding(Css.px(10)),
      /* :: */[
        Css.border(Css.px(1), Css.solid, Css.hex("eee")),
        /* [] */0
      ]
    ]);

var inputButton = Css.style(/* :: */[
      Css.padding2(Css.px(10), Css.px(20)),
      /* :: */[
        Css.backgroundColor(Css.rgb(147, 200, 242)),
        /* :: */[
          Css.color(Css.white),
          /* :: */[
            Css.fontWeight(Css.bold),
            /* :: */[
              Css.border(Css.px(1), Css.solid, Css.rgb(147, 200, 242)),
              /* :: */[
                Css.unsafe("border-radius", "0 3px 3px 0"),
                /* [] */0
              ]
            ]
          ]
        ]
      ]
    ]);

var Styles = /* module */[
  /* taskCount */taskCount,
  /* input */input,
  /* inputButton */inputButton
];

function TodoList(Props) {
  var match = React.useState((function () {
          return "";
        }));
  var setInputText = match[1];
  var inputText = match[0];
  var match$1 = React.useState((function () {
          return /* [] */0;
        }));
  var setTodoList = match$1[1];
  var todoList = match$1[0];
  var totalItems = List.length(todoList);
  var completedItems = List.length(List.filter((function (i) {
                return i[/* completed */2];
              }))(todoList));
  var completedMessage = String(completedItems) + (" of " + (String(totalItems) + " tasks completed."));
  var handleToggle = function (id) {
    var newList = List.map((function (todoItem) {
            var match = todoItem[/* id */0] === id;
            return /* record */[
                    /* id */todoItem[/* id */0],
                    /* title */todoItem[/* title */1],
                    /* completed */match ? !todoItem[/* completed */2] : todoItem[/* completed */2]
                  ];
          }), todoList);
    return Curry._1(setTodoList, (function (param) {
                  return newList;
                }));
  };
  var listOfTodoItems = List.map((function (item) {
          return React.createElement(TodoItem$ReactHooksTemplate.make, {
                      title: item[/* title */1],
                      onClick: handleToggle,
                      id: item[/* id */0],
                      completed: item[/* completed */2],
                      key: String(item[/* id */0])
                    });
        }), todoList);
  return React.createElement("div", undefined, React.createElement("p", {
                  className: taskCount
                }, completedMessage), React.createElement("input", {
                  className: input,
                  value: inputText,
                  onChange: (function ($$event) {
                      return Curry._1(setInputText, $$event.target.value);
                    })
                }), React.createElement("button", {
                  className: inputButton,
                  onClick: (function (param) {
                      var title = inputText;
                      var item_000 = /* id */Utils$ReactHooksTemplate.Identifier[/* unique */0](/* () */0);
                      var item = /* record */[
                        item_000,
                        /* title */title,
                        /* completed */false
                      ];
                      Curry._1(setTodoList, (function (param) {
                              return /* :: */[
                                      item,
                                      todoList
                                    ];
                            }));
                      return Curry._1(setInputText, (function (param) {
                                    return "";
                                  }));
                    })
                }, "Adicionar"), React.createElement("div", undefined, $$Array.of_list(listOfTodoItems)));
}

var make = TodoList;

exports.Styles = Styles;
exports.make = make;
/* taskCount Not a pure module */
